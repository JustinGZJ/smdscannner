//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAQ.wcl {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FFTesterResponse", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities")]
    [System.SerializableAttribute()]
    public partial class FFTesterResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FFPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FFTestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FFUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FFPartID {
            get {
                return this.FFPartIDField;
            }
            set {
                if ((this.FFPartIDField.Equals(value) != true)) {
                    this.FFPartIDField = value;
                    this.RaisePropertyChanged("FFPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FFTestID {
            get {
                return this.FFTestIDField;
            }
            set {
                if ((this.FFTestIDField.Equals(value) != true)) {
                    this.FFTestIDField = value;
                    this.RaisePropertyChanged("FFTestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FFUnitID {
            get {
                return this.FFUnitIDField;
            }
            set {
                if ((this.FFUnitIDField.Equals(value) != true)) {
                    this.FFUnitIDField = value;
                    this.RaisePropertyChanged("FFUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetOfflineTestsResponse", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.Models")]
    [System.SerializableAttribute()]
    public partial class GetOfflineTestsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.FLEXFLOW[] SearchResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.FLEXFLOW[] SearchResult {
            get {
                return this.SearchResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchResultField, value) != true)) {
                    this.SearchResultField = value;
                    this.RaisePropertyChanged("SearchResult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FLEXFLOW", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class FLEXFLOW : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.DUT[] DUTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.EXTRA[] EXTRAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.FACTORY FACTORYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.GROUP[] GROUPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.PANEL PANELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.REFS REFSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DAQ.wcl.TEST[] TESTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.DUT[] DUT {
            get {
                return this.DUTField;
            }
            set {
                if ((object.ReferenceEquals(this.DUTField, value) != true)) {
                    this.DUTField = value;
                    this.RaisePropertyChanged("DUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.EXTRA[] EXTRA {
            get {
                return this.EXTRAField;
            }
            set {
                if ((object.ReferenceEquals(this.EXTRAField, value) != true)) {
                    this.EXTRAField = value;
                    this.RaisePropertyChanged("EXTRA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.FACTORY FACTORY {
            get {
                return this.FACTORYField;
            }
            set {
                if ((object.ReferenceEquals(this.FACTORYField, value) != true)) {
                    this.FACTORYField = value;
                    this.RaisePropertyChanged("FACTORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.GROUP[] GROUP {
            get {
                return this.GROUPField;
            }
            set {
                if ((object.ReferenceEquals(this.GROUPField, value) != true)) {
                    this.GROUPField = value;
                    this.RaisePropertyChanged("GROUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.PANEL PANEL {
            get {
                return this.PANELField;
            }
            set {
                if ((object.ReferenceEquals(this.PANELField, value) != true)) {
                    this.PANELField = value;
                    this.RaisePropertyChanged("PANEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.REFS REFS {
            get {
                return this.REFSField;
            }
            set {
                if ((object.ReferenceEquals(this.REFSField, value) != true)) {
                    this.REFSField = value;
                    this.RaisePropertyChanged("REFS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DAQ.wcl.TEST[] TEST {
            get {
                return this.TESTField;
            }
            set {
                if ((object.ReferenceEquals(this.TESTField, value) != true)) {
                    this.TESTField = value;
                    this.RaisePropertyChanged("TEST");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FACTORY", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class FACTORY : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIXTUREField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SYSTEMTYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TESTCATEGORYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TESTERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIXTURE {
            get {
                return this.FIXTUREField;
            }
            set {
                if ((object.ReferenceEquals(this.FIXTUREField, value) != true)) {
                    this.FIXTUREField = value;
                    this.RaisePropertyChanged("FIXTURE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SYSTEMTYPE {
            get {
                return this.SYSTEMTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.SYSTEMTYPEField, value) != true)) {
                    this.SYSTEMTYPEField = value;
                    this.RaisePropertyChanged("SYSTEMTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TESTCATEGORY {
            get {
                return this.TESTCATEGORYField;
            }
            set {
                if ((object.ReferenceEquals(this.TESTCATEGORYField, value) != true)) {
                    this.TESTCATEGORYField = value;
                    this.RaisePropertyChanged("TESTCATEGORY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TESTER {
            get {
                return this.TESTERField;
            }
            set {
                if ((object.ReferenceEquals(this.TESTERField, value) != true)) {
                    this.TESTERField = value;
                    this.RaisePropertyChanged("TESTER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USER {
            get {
                return this.USERField;
            }
            set {
                if ((object.ReferenceEquals(this.USERField, value) != true)) {
                    this.USERField = value;
                    this.RaisePropertyChanged("USER");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PANEL", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class PANEL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RUNMODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TESTTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TIMESTAMPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WAITTIMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENT {
            get {
                return this.COMMENTField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTField, value) != true)) {
                    this.COMMENTField = value;
                    this.RaisePropertyChanged("COMMENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RUNMODE {
            get {
                return this.RUNMODEField;
            }
            set {
                if ((object.ReferenceEquals(this.RUNMODEField, value) != true)) {
                    this.RUNMODEField = value;
                    this.RaisePropertyChanged("RUNMODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TESTTIME {
            get {
                return this.TESTTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TESTTIMEField, value) != true)) {
                    this.TESTTIMEField = value;
                    this.RaisePropertyChanged("TESTTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIMESTAMP {
            get {
                return this.TIMESTAMPField;
            }
            set {
                if ((object.ReferenceEquals(this.TIMESTAMPField, value) != true)) {
                    this.TIMESTAMPField = value;
                    this.RaisePropertyChanged("TIMESTAMP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WAITTIME {
            get {
                return this.WAITTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.WAITTIMEField, value) != true)) {
                    this.WAITTIMEField = value;
                    this.RaisePropertyChanged("WAITTIME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REFS", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class REFS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CFG_REFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FTS_REFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SEQ_REFField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CFG_REF {
            get {
                return this.CFG_REFField;
            }
            set {
                if ((object.ReferenceEquals(this.CFG_REFField, value) != true)) {
                    this.CFG_REFField = value;
                    this.RaisePropertyChanged("CFG_REF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FTS_REF {
            get {
                return this.FTS_REFField;
            }
            set {
                if ((object.ReferenceEquals(this.FTS_REFField, value) != true)) {
                    this.FTS_REFField = value;
                    this.RaisePropertyChanged("FTS_REF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SEQ_REF {
            get {
                return this.SEQ_REFField;
            }
            set {
                if ((object.ReferenceEquals(this.SEQ_REFField, value) != true)) {
                    this.SEQ_REFField = value;
                    this.RaisePropertyChanged("SEQ_REF");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DUT", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class DUT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENDTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PANELIDXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOCKETField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TESTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TESTTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TIMESTAMPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UNITIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENT {
            get {
                return this.COMMENTField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTField, value) != true)) {
                    this.COMMENTField = value;
                    this.RaisePropertyChanged("COMMENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDTIME {
            get {
                return this.ENDTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDTIMEField, value) != true)) {
                    this.ENDTIMEField = value;
                    this.RaisePropertyChanged("ENDTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PANELIDX {
            get {
                return this.PANELIDXField;
            }
            set {
                if ((object.ReferenceEquals(this.PANELIDXField, value) != true)) {
                    this.PANELIDXField = value;
                    this.RaisePropertyChanged("PANELIDX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTID {
            get {
                return this.PARTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTIDField, value) != true)) {
                    this.PARTIDField = value;
                    this.RaisePropertyChanged("PARTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOCKET {
            get {
                return this.SOCKETField;
            }
            set {
                if ((object.ReferenceEquals(this.SOCKETField, value) != true)) {
                    this.SOCKETField = value;
                    this.RaisePropertyChanged("SOCKET");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TESTID {
            get {
                return this.TESTIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TESTIDField, value) != true)) {
                    this.TESTIDField = value;
                    this.RaisePropertyChanged("TESTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TESTTIME {
            get {
                return this.TESTTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TESTTIMEField, value) != true)) {
                    this.TESTTIMEField = value;
                    this.RaisePropertyChanged("TESTTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIMESTAMP {
            get {
                return this.TIMESTAMPField;
            }
            set {
                if ((object.ReferenceEquals(this.TIMESTAMPField, value) != true)) {
                    this.TIMESTAMPField = value;
                    this.RaisePropertyChanged("TIMESTAMP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UNITID {
            get {
                return this.UNITIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UNITIDField, value) != true)) {
                    this.UNITIDField = value;
                    this.RaisePropertyChanged("UNITID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EXTRA", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class EXTRA : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TAGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOR {
            get {
                return this.FORField;
            }
            set {
                if ((object.ReferenceEquals(this.FORField, value) != true)) {
                    this.FORField = value;
                    this.RaisePropertyChanged("FOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PID {
            get {
                return this.PIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PIDField, value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TAG {
            get {
                return this.TAGField;
            }
            set {
                if ((object.ReferenceEquals(this.TAGField, value) != true)) {
                    this.TAGField = value;
                    this.RaisePropertyChanged("TAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VAL {
            get {
                return this.VALField;
            }
            set {
                if ((object.ReferenceEquals(this.VALField, value) != true)) {
                    this.VALField = value;
                    this.RaisePropertyChanged("VAL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GROUP", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class GROUP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COMMENTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DESCRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENDTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GROUPIDXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOOPIDXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MODULETIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARENTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESOURCEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STEPGROUPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TIMESTAMPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TOTALTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COMMENT {
            get {
                return this.COMMENTField;
            }
            set {
                if ((object.ReferenceEquals(this.COMMENTField, value) != true)) {
                    this.COMMENTField = value;
                    this.RaisePropertyChanged("COMMENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DESCR {
            get {
                return this.DESCRField;
            }
            set {
                if ((object.ReferenceEquals(this.DESCRField, value) != true)) {
                    this.DESCRField = value;
                    this.RaisePropertyChanged("DESCR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUT {
            get {
                return this.DUTField;
            }
            set {
                if ((object.ReferenceEquals(this.DUTField, value) != true)) {
                    this.DUTField = value;
                    this.RaisePropertyChanged("DUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDTIME {
            get {
                return this.ENDTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDTIMEField, value) != true)) {
                    this.ENDTIMEField = value;
                    this.RaisePropertyChanged("ENDTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GROUPIDX {
            get {
                return this.GROUPIDXField;
            }
            set {
                if ((object.ReferenceEquals(this.GROUPIDXField, value) != true)) {
                    this.GROUPIDXField = value;
                    this.RaisePropertyChanged("GROUPIDX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOOPIDX {
            get {
                return this.LOOPIDXField;
            }
            set {
                if ((object.ReferenceEquals(this.LOOPIDXField, value) != true)) {
                    this.LOOPIDXField = value;
                    this.RaisePropertyChanged("LOOPIDX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MODULETIME {
            get {
                return this.MODULETIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MODULETIMEField, value) != true)) {
                    this.MODULETIMEField = value;
                    this.RaisePropertyChanged("MODULETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENT {
            get {
                return this.PARENTField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTField, value) != true)) {
                    this.PARENTField = value;
                    this.RaisePropertyChanged("PARENT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESOURCE {
            get {
                return this.RESOURCEField;
            }
            set {
                if ((object.ReferenceEquals(this.RESOURCEField, value) != true)) {
                    this.RESOURCEField = value;
                    this.RaisePropertyChanged("RESOURCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STEPGROUP {
            get {
                return this.STEPGROUPField;
            }
            set {
                if ((object.ReferenceEquals(this.STEPGROUPField, value) != true)) {
                    this.STEPGROUPField = value;
                    this.RaisePropertyChanged("STEPGROUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIMESTAMP {
            get {
                return this.TIMESTAMPField;
            }
            set {
                if ((object.ReferenceEquals(this.TIMESTAMPField, value) != true)) {
                    this.TIMESTAMPField = value;
                    this.RaisePropertyChanged("TIMESTAMP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TOTALTIME {
            get {
                return this.TOTALTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TOTALTIMEField, value) != true)) {
                    this.TOTALTIMEField = value;
                    this.RaisePropertyChanged("TOTALTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TYPE {
            get {
                return this.TYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.TYPEField, value) != true)) {
                    this.TYPEField = value;
                    this.RaisePropertyChanged("TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TEST", Namespace="http://schemas.datacontract.org/2004/07/Flex.FFTester.Utilities.FlexFlowXmlSignal" +
        "")]
    [System.SerializableAttribute()]
    public partial class TEST : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DATATYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DESCRIPTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAILURECODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GROUPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HILIMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOLIMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REMARKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RULEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TARGETField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TIMESTAMPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TOTALTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UNITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALUEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DATATYPE {
            get {
                return this.DATATYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.DATATYPEField, value) != true)) {
                    this.DATATYPEField = value;
                    this.RaisePropertyChanged("DATATYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DESCRIPTION {
            get {
                return this.DESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.DESCRIPTIONField, value) != true)) {
                    this.DESCRIPTIONField = value;
                    this.RaisePropertyChanged("DESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUT {
            get {
                return this.DUTField;
            }
            set {
                if ((object.ReferenceEquals(this.DUTField, value) != true)) {
                    this.DUTField = value;
                    this.RaisePropertyChanged("DUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAILURECODE {
            get {
                return this.FAILURECODEField;
            }
            set {
                if ((object.ReferenceEquals(this.FAILURECODEField, value) != true)) {
                    this.FAILURECODEField = value;
                    this.RaisePropertyChanged("FAILURECODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GROUP {
            get {
                return this.GROUPField;
            }
            set {
                if ((object.ReferenceEquals(this.GROUPField, value) != true)) {
                    this.GROUPField = value;
                    this.RaisePropertyChanged("GROUP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HILIM {
            get {
                return this.HILIMField;
            }
            set {
                if ((object.ReferenceEquals(this.HILIMField, value) != true)) {
                    this.HILIMField = value;
                    this.RaisePropertyChanged("HILIM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOLIM {
            get {
                return this.LOLIMField;
            }
            set {
                if ((object.ReferenceEquals(this.LOLIMField, value) != true)) {
                    this.LOLIMField = value;
                    this.RaisePropertyChanged("LOLIM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REMARK {
            get {
                return this.REMARKField;
            }
            set {
                if ((object.ReferenceEquals(this.REMARKField, value) != true)) {
                    this.REMARKField = value;
                    this.RaisePropertyChanged("REMARK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RULE {
            get {
                return this.RULEField;
            }
            set {
                if ((object.ReferenceEquals(this.RULEField, value) != true)) {
                    this.RULEField = value;
                    this.RaisePropertyChanged("RULE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TARGET {
            get {
                return this.TARGETField;
            }
            set {
                if ((object.ReferenceEquals(this.TARGETField, value) != true)) {
                    this.TARGETField = value;
                    this.RaisePropertyChanged("TARGET");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIMESTAMP {
            get {
                return this.TIMESTAMPField;
            }
            set {
                if ((object.ReferenceEquals(this.TIMESTAMPField, value) != true)) {
                    this.TIMESTAMPField = value;
                    this.RaisePropertyChanged("TIMESTAMP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TOTALTIME {
            get {
                return this.TOTALTIMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TOTALTIMEField, value) != true)) {
                    this.TOTALTIMEField = value;
                    this.RaisePropertyChanged("TOTALTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UNIT {
            get {
                return this.UNITField;
            }
            set {
                if ((object.ReferenceEquals(this.UNITField, value) != true)) {
                    this.UNITField = value;
                    this.RaisePropertyChanged("UNIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUE {
            get {
                return this.VALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUEField, value) != true)) {
                    this.VALUEField = value;
                    this.RaisePropertyChanged("VALUE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wcl.IFFTesterService")]
    public interface IFFTesterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/GetUnitInfo", ReplyAction="http://tempuri.org/IFFTesterService/GetUnitInfoResponse")]
        DAQ.wcl.FFTesterResponse GetUnitInfo(string serialNumber, string stationName, string userId, string extraData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/GetUnitInfo", ReplyAction="http://tempuri.org/IFFTesterService/GetUnitInfoResponse")]
        System.Threading.Tasks.Task<DAQ.wcl.FFTesterResponse> GetUnitInfoAsync(string serialNumber, string stationName, string userId, string extraData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/SaveResult", ReplyAction="http://tempuri.org/IFFTesterService/SaveResultResponse")]
        DAQ.wcl.FFTesterResponse SaveResult(string ffTesterXmlRequest, string stationName, string userId, string extraData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/SaveResult", ReplyAction="http://tempuri.org/IFFTesterService/SaveResultResponse")]
        System.Threading.Tasks.Task<DAQ.wcl.FFTesterResponse> SaveResultAsync(string ffTesterXmlRequest, string stationName, string userId, string extraData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/ExecuteGenericFunction", ReplyAction="http://tempuri.org/IFFTesterService/ExecuteGenericFunctionResponse")]
        DAQ.wcl.ExecuteGenericFunctionResponse ExecuteGenericFunction(DAQ.wcl.ExecuteGenericFunctionRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/ExecuteGenericFunction", ReplyAction="http://tempuri.org/IFFTesterService/ExecuteGenericFunctionResponse")]
        System.Threading.Tasks.Task<DAQ.wcl.ExecuteGenericFunctionResponse> ExecuteGenericFunctionAsync(DAQ.wcl.ExecuteGenericFunctionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/GetOfflineTests", ReplyAction="http://tempuri.org/IFFTesterService/GetOfflineTestsResponse")]
        DAQ.wcl.GetOfflineTestsResponse GetOfflineTests(System.Collections.Generic.KeyValuePair<string, string>[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/GetOfflineTests", ReplyAction="http://tempuri.org/IFFTesterService/GetOfflineTestsResponse")]
        System.Threading.Tasks.Task<DAQ.wcl.GetOfflineTestsResponse> GetOfflineTestsAsync(System.Collections.Generic.KeyValuePair<string, string>[] conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/GetProductStructure", ReplyAction="http://tempuri.org/IFFTesterService/GetProductStructureResponse")]
        DAQ.wcl.FFTesterResponse GetProductStructure(string partNumber, string revision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFFTesterService/GetProductStructure", ReplyAction="http://tempuri.org/IFFTesterService/GetProductStructureResponse")]
        System.Threading.Tasks.Task<DAQ.wcl.FFTesterResponse> GetProductStructureAsync(string partNumber, string revision);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteGenericFunction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteGenericFunctionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string functionName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string spInputParameter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string stationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string output;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string errorDescription;
        
        public ExecuteGenericFunctionRequest() {
        }
        
        public ExecuteGenericFunctionRequest(string functionName, string spInputParameter, string stationName, string userId, string output, string errorDescription) {
            this.functionName = functionName;
            this.spInputParameter = spInputParameter;
            this.stationName = stationName;
            this.userId = userId;
            this.output = output;
            this.errorDescription = errorDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteGenericFunctionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteGenericFunctionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public DAQ.wcl.FFTesterResponse ExecuteGenericFunctionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string output;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorDescription;
        
        public ExecuteGenericFunctionResponse() {
        }
        
        public ExecuteGenericFunctionResponse(DAQ.wcl.FFTesterResponse ExecuteGenericFunctionResult, string output, string errorDescription) {
            this.ExecuteGenericFunctionResult = ExecuteGenericFunctionResult;
            this.output = output;
            this.errorDescription = errorDescription;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFFTesterServiceChannel : DAQ.wcl.IFFTesterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FFTesterServiceClient : System.ServiceModel.ClientBase<DAQ.wcl.IFFTesterService>, DAQ.wcl.IFFTesterService {
        
        public FFTesterServiceClient() {
        }
        
        public FFTesterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FFTesterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FFTesterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FFTesterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DAQ.wcl.FFTesterResponse GetUnitInfo(string serialNumber, string stationName, string userId, string extraData) {
            return base.Channel.GetUnitInfo(serialNumber, stationName, userId, extraData);
        }
        
        public System.Threading.Tasks.Task<DAQ.wcl.FFTesterResponse> GetUnitInfoAsync(string serialNumber, string stationName, string userId, string extraData) {
            return base.Channel.GetUnitInfoAsync(serialNumber, stationName, userId, extraData);
        }
        
        public DAQ.wcl.FFTesterResponse SaveResult(string ffTesterXmlRequest, string stationName, string userId, string extraData) {
            return base.Channel.SaveResult(ffTesterXmlRequest, stationName, userId, extraData);
        }
        
        public System.Threading.Tasks.Task<DAQ.wcl.FFTesterResponse> SaveResultAsync(string ffTesterXmlRequest, string stationName, string userId, string extraData) {
            return base.Channel.SaveResultAsync(ffTesterXmlRequest, stationName, userId, extraData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DAQ.wcl.ExecuteGenericFunctionResponse DAQ.wcl.IFFTesterService.ExecuteGenericFunction(DAQ.wcl.ExecuteGenericFunctionRequest request) {
            return base.Channel.ExecuteGenericFunction(request);
        }
        
        public DAQ.wcl.FFTesterResponse ExecuteGenericFunction(string functionName, string spInputParameter, string stationName, string userId, ref string output, ref string errorDescription) {
            DAQ.wcl.ExecuteGenericFunctionRequest inValue = new DAQ.wcl.ExecuteGenericFunctionRequest();
            inValue.functionName = functionName;
            inValue.spInputParameter = spInputParameter;
            inValue.stationName = stationName;
            inValue.userId = userId;
            inValue.output = output;
            inValue.errorDescription = errorDescription;
            DAQ.wcl.ExecuteGenericFunctionResponse retVal = ((DAQ.wcl.IFFTesterService)(this)).ExecuteGenericFunction(inValue);
            output = retVal.output;
            errorDescription = retVal.errorDescription;
            return retVal.ExecuteGenericFunctionResult;
        }
        
        public System.Threading.Tasks.Task<DAQ.wcl.ExecuteGenericFunctionResponse> ExecuteGenericFunctionAsync(DAQ.wcl.ExecuteGenericFunctionRequest request) {
            return base.Channel.ExecuteGenericFunctionAsync(request);
        }
        
        public DAQ.wcl.GetOfflineTestsResponse GetOfflineTests(System.Collections.Generic.KeyValuePair<string, string>[] conditions) {
            return base.Channel.GetOfflineTests(conditions);
        }
        
        public System.Threading.Tasks.Task<DAQ.wcl.GetOfflineTestsResponse> GetOfflineTestsAsync(System.Collections.Generic.KeyValuePair<string, string>[] conditions) {
            return base.Channel.GetOfflineTestsAsync(conditions);
        }
        
        public DAQ.wcl.FFTesterResponse GetProductStructure(string partNumber, string revision) {
            return base.Channel.GetProductStructure(partNumber, revision);
        }
        
        public System.Threading.Tasks.Task<DAQ.wcl.FFTesterResponse> GetProductStructureAsync(string partNumber, string revision) {
            return base.Channel.GetProductStructureAsync(partNumber, revision);
        }
    }
}
